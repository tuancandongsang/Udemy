Nguồn:  https://galaxyz.net/lam-viec-voi-cac-bien-moi-truong-trong-vuejs.2016.anews#using-the-environment-files-in-your-code
Trong một ứng dụng web, ta rất có thể phải truy cập server API backend thông qua một URL. 
URL này có thể giống như http://localhost:8080/api khi đang phát triển và https://site.com/api trong production khi dự án được triển khai. 
Các biến môi trường cho phép ta dễ dàng thay đổi URL này tự động, theo trạng thái hiện tại của dự án.

Biến môi trường với Vue thông qua các file có phần mở rộng .env . 
Các file này chịu trách nhiệm lưu trữ thông tin dành riêng cho môi trường (phát triển, thử nghiệm, production ,…)

vd: khi tạo 1 dự án, ta sẽ tạo 2 file là  dev.env.js và prod.env.js
	- với dev.env.js tạo biến môi trường trong lúc dev bằng cách chạy:  dev.env.js npm run dev 
	- prod.env.js trong lúc build lên môi trường thử nghiệm bằng cách chạy : prod.env.js npm run build  

+ trong file dev.env.js ta viết
'use strict'
const merge = require('webpack-merge') 
const prodEnv = require('./prod.env')  
module.exports = merge(prodEnv, {   NODE_ENV: '"development"',   ROOT_API: '"http://localhost/api"' })

+ trong file prod.env.js ta viết
'use strict'
 module.exports = {   NODE_ENV: '"production"',   ROOT_API: '"http://www.site.com/api"' } 

Sau khi tạo biến ROOT_API , ta có thể sử dụng nó ở bất kỳ đâu trong Vue thông qua đối tượng process.env global :
ở trong 1 file nào của app. ta có thể sử dụng biên môi trường
	- khi chạy  dev.env.js npm run dev vào dứng dụng
	ở 1 trang bất kỳ ta chạy 
	mounted() {   console.log(process.env.ROOT_API) } 	==>> // http://localhost/api

	- khi chạy  prod.env.js npm run build vào dứng dụng
	folder dist sẽ được tạo với ứng dụng đã sẵn sàng để triển khai cho môi trường production 
	và biến ROOT_API sẽ hiển thị giá trị http://www.site.com./api , như đã chỉ định trong prod.env.js
	ở 1 trang bất kỳ ta chạy 
	mounted() {   console.log(process.env.ROOT_API) } 	==>> // http://localhost/api

=> với từng môi trường khác nhau ta có thể cấu hình biến môi trường khác nhau

+ ở Vue CLI 3:
Nếu ứng dụng của bạn đang sử dụng Vue CLI mới , thay vào đó bạn cần có các file như .env và .env.prod ở folder root của dự án và bao gồm các biến như sau:

.env
VUE_APP_ROOT_API=http://localhost/api 
.env.prod
VUE_APP_ROOT_API=http://www.site.com/api 
Ở đây, tiền tố VUE_APP_ rất quan trọng và các biến không có tiền tố đó sẽ không khả dụng trong ứng dụng của bạn.




Cấu Hình Môi Trường
	- sẽ hữu ích nếu có các giá trị cấu hình khác nhau dựa trên môi trường nơi ứng dụng đang chạy
vd: có thể muốn sử dụng cục bộ trình điều khiên bộ nhớ cache với trình điều khiển bộ nhớ cache trên máy chử ứng dụng
- 1 tệp env cụ thể ( .env.product ) sẽ có mức độ ưu tiên cao hơn so với chế độ chung ( .env )

trong file .env ta có biên VUE_APP_SECRET = "pool"
Sử dụng biên trong trình mã khách
vd console.log(process.env.VUE_APP_SECRET) ==>> // pool

Biến chỉ cục bộ:
- nếu có các biên không cần mặc định trong codeBase, ta có thể sử dụng .env.local // .ent.product.local
	các file này sẽ tự động được bỏ qua khi up lên git

